version: "3.8"

services:
  telegram-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: script_bot_api
    ports:
      - "5076:5001"
    env_file:
      - .env
    environment:
      - ConnectionStrings__DefaultConnection=Host=${DB_HOST};Port=${DB_PORT};Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
    networks:
      - script_bot_network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: script_bot_db
    image: postgres:latest
    environment:
      POSTGRES_DB: script_bot_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - script_bot_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d script_bot_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: script_bot_pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - script_bot_network
    depends_on:
      - postgres

  sftp:
    container_name: script_bot_sftp
    image: atmoz/sftp
    ports:
      - "22:22"
    volumes:
      - ./sftp/upload:/home/foo/upload
    command: foo:pass:::upload
    networks:
      - script_bot_network
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "22" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  script_bot_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
